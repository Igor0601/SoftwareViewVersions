// <auto-generated />
using Loccioni.SoftwareViewVersions.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Loccioni.SoftwareViewVersions.Db.Migrations
{
    [DbContext(typeof(LoccioniDbContext))]
    [Migration("20250120162559_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("Loccioni.SoftwareViewVersions.DataModels.Bench", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdPlant")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Logo")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Tags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlGit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("benches");
                });

            modelBuilder.Entity("Loccioni.SoftwareViewVersions.DataModels.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Logo")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RagioneFiscale")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Tags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("Loccioni.SoftwareViewVersions.DataModels.Plant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IdClient")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<byte[]>("Logo")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Tags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("plants");
                });

            modelBuilder.Entity("Loccioni.SoftwareViewVersions.DataModels.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdPlant")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlGit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("servers");
                });

            modelBuilder.Entity("Loccioni.SoftwareViewVersions.DataModels.ServerVersions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Configurator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DateUpload")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IdServer")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RefPerson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Supervisor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Tags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UploaderHealth")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UploaderReport")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkerHealth")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkerModels")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkerPrograms")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkerResource")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkerResults")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkerTopology")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkerWip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("serverVersions");
                });

            modelBuilder.Entity("Loccioni.SoftwareViewVersions.DataModels.Updates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DateUpload")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IdBench")
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("Projects")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RefPerson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("updates");
                });
#pragma warning restore 612, 618
        }
    }
}
